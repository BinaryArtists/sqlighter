//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../../android//com/vals/a2ios/amfibian/intf/AnOrm.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComValsA2iosAmfibianIntfAnOrm")
#ifdef RESTRICT_ComValsA2iosAmfibianIntfAnOrm
#define INCLUDE_ALL_ComValsA2iosAmfibianIntfAnOrm 0
#else
#define INCLUDE_ALL_ComValsA2iosAmfibianIntfAnOrm 1
#endif
#undef RESTRICT_ComValsA2iosAmfibianIntfAnOrm

#if !defined (AnOrm_) && (INCLUDE_ALL_ComValsA2iosAmfibianIntfAnOrm || defined(INCLUDE_AnOrm))
#define AnOrm_

#define RESTRICT_ComValsA2iosAmfibianIntfAnSql 1
#define INCLUDE_AnSql 1
#include "com/vals/a2ios/amfibian/intf/AnSql.h"

@class JavaLangLong;
@protocol AnIncubator;
@protocol JavaUtilCollection;
@protocol SQLighterDb;

@protocol AnOrm < AnSql, JavaObject >

- (id<JavaUtilCollection>)getRecords;

- (void)setIncubatorWithAnIncubator:(id<AnIncubator>)incubator;

- (id<JavaUtilCollection>)getRecordsWithJavaUtilCollection:(id<JavaUtilCollection>)collectionToUse;

- (id<JavaUtilCollection>)getJSONObjectRecordsWithJavaUtilCollection:(id<JavaUtilCollection>)collectionToUse;

- (id<JavaUtilCollection>)getJSONObjectRecords;

- (id)getSingleResult;

- (id)getFirstResultOrNull;

- (JavaLangLong *)apply;

- (void)setSqlighterDbWithSQLighterDb:(id<SQLighterDb>)sqlighterDb;

- (id<SQLighterDb>)getSqlighterDb;

- (void)fetchWithId:(id)entity
       withNSString:(NSString *)attribName
       withNSString:(NSString *)extraSql;

- (void)fetchWithJavaUtilCollection:(id<JavaUtilCollection>)entities
                       withNSString:(NSString *)attribName
                       withNSString:(NSString *)extraSql;

- (void)fetchWithId:(id)entity
       withNSString:(NSString *)attribName;

- (void)fetchWithJavaUtilCollection:(id<JavaUtilCollection>)entities
                       withNSString:(NSString *)attribName;

@end

J2OBJC_EMPTY_STATIC_INIT(AnOrm)

J2OBJC_TYPE_LITERAL_HEADER(AnOrm)

#define ComValsA2iosAmfibianIntfAnOrm AnOrm

#endif

#pragma pop_macro("INCLUDE_ALL_ComValsA2iosAmfibianIntfAnOrm")
