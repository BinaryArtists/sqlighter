//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../../android//com/vals/a2ios/amfibian/impl/AnObjectImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComValsA2iosAmfibianImplAnObjectImpl")
#ifdef RESTRICT_ComValsA2iosAmfibianImplAnObjectImpl
#define INCLUDE_ALL_ComValsA2iosAmfibianImplAnObjectImpl 0
#else
#define INCLUDE_ALL_ComValsA2iosAmfibianImplAnObjectImpl 1
#endif
#undef RESTRICT_ComValsA2iosAmfibianImplAnObjectImpl

#if !defined (AnObjectImpl_) && (INCLUDE_ALL_ComValsA2iosAmfibianImplAnObjectImpl || defined(INCLUDE_AnObjectImpl))
#define AnObjectImpl_

#define RESTRICT_ComValsA2iosAmfibianIntfAnObject 1
#define INCLUDE_AnObject 1
#include "com/vals/a2ios/amfibian/intf/AnObject.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgJsonJSONArray;
@class OrgJsonJSONObject;
@protocol AnAdapter;
@protocol AnAttrib;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;

@interface AnObjectImpl : NSObject < AnObject > {
 @public
  IOSClass *nativeClass_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithIOSClass:(IOSClass *)anObjClass
               withAnAttribArray:(IOSObjectArray *)propertyMappers;

- (instancetype)initWithIOSClass:(IOSClass *)anObjClass
               withAnAttribArray:(IOSObjectArray *)propertyMappers
                    withAnObject:(id<AnObject>)parentAnObject;

- (instancetype)initWithIOSClass:(IOSClass *)anObjClass
                    withAnObject:(id<AnObject>)parentAnObject;

- (instancetype)initWithIOSClass:(IOSClass *)anObjClass
               withNSStringArray:(IOSObjectArray *)propertyNames;

- (instancetype)initWithIOSClass:(IOSClass *)anObjClass
               withNSStringArray:(IOSObjectArray *)propertyNames
                    withAnObject:(id<AnObject>)parentAnObject;

- (void)addAttribWithAnAttrib:(id<AnAttrib>)anAttrib;

- (OrgJsonJSONArray *)asJSONArrayWithJavaUtilCollection:(id<JavaUtilCollection>)objects;

- (NSString *)asJsonArrayStringWithJavaUtilCollection:(id<JavaUtilCollection>)objects;

- (id<JavaUtilMap>)asJsonMap;

- (OrgJsonJSONObject *)asJSONObjectWithId:(id)nativeObject;

- (NSString *)asJsonStringWithId:(id)nativeObject;

- (id<JavaUtilCollection>)asListWithNSString:(NSString *)jsonArrayString;

- (id<JavaUtilMap>)asNativeMapWithId:(id)nativeObject;

- (id)asNativeObjectWithOrgJsonJSONObject:(OrgJsonJSONObject *)jsonObject;

- (id)asNativeObjectWithNSString:(NSString *)jsonString;

- (id<JavaUtilMap>)getAllAttribMap;

- (IOSObjectArray *)getAllAttribs;

- (id<AnAttrib>)getAttribWithNSString:(NSString *)attribName;

- (id<AnAdapter>)getJsonGetAdapter;

- (id<AnAdapter>)getJsonSetAdapter;

- (id<JavaUtilMap>)getMapWithId:(id)nativeObject;

- (IOSClass *)getNativeClass;

- (id)getNativeObject;

- (IOSObjectArray *)getOwnAttribs;

- (id<AnObject>)getParentAnObject;

- (void)initConverters OBJC_METHOD_FAMILY_NONE;

- (void)resetNativeObject;

- (void)setJsonGetAdapterWithAnAdapter:(id<AnAdapter>)jsonGetAdapter;

- (void)setJsonSetAdapterWithAnAdapter:(id<AnAdapter>)jsonSetAdapter;

- (void)setNativeClassWithIOSClass:(IOSClass *)anObjClass;

- (void)setNativeObjectWithId:(id)o;

- (void)setOwnAttribsWithAnAttribArray:(IOSObjectArray *)attribs;

- (void)setParentAnObjectWithAnObject:(id<AnObject>)parentObject;

#pragma mark Protected

- (id)getValueWithAnAdapter:(id<AnAdapter>)attribAdapter
              withAnAdapter:(id<AnAdapter>)objectAdapter
               withAnAttrib:(id<AnAttrib>)attrb;

- (void)init__WithIOSClass:(IOSClass *)anObjClass
         withAnAttribArray:(IOSObjectArray *)propertyMappers OBJC_METHOD_FAMILY_NONE;

- (void)init__WithIOSClass:(IOSClass *)anObjClass
         withAnAttribArray:(IOSObjectArray *)propertyMappers
              withAnObject:(id<AnObject>)parentMapper OBJC_METHOD_FAMILY_NONE;

- (void)init__WithIOSClass:(IOSClass *)anObjClass
              withAnObject:(id<AnObject>)parentMapper OBJC_METHOD_FAMILY_NONE;

- (void)init__WithIOSClass:(IOSClass *)anObjClass
         withNSStringArray:(IOSObjectArray *)propertyNames OBJC_METHOD_FAMILY_NONE;

- (void)init__WithIOSClass:(IOSClass *)anObjClass
         withNSStringArray:(IOSObjectArray *)propertyNames
              withAnObject:(id<AnObject>)parentMapper OBJC_METHOD_FAMILY_NONE;

- (void)setValueWithAnAdapter:(id<AnAdapter>)attribConverter
                withAnAdapter:(id<AnAdapter>)objectConverter
                 withAnAttrib:(id<AnAttrib>)attrib
                       withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(AnObjectImpl)

J2OBJC_FIELD_SETTER(AnObjectImpl, nativeClass_, IOSClass *)

FOUNDATION_EXPORT void AnObjectImpl_init(AnObjectImpl *self);

FOUNDATION_EXPORT AnObjectImpl *new_AnObjectImpl_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnObjectImpl *create_AnObjectImpl_init();

FOUNDATION_EXPORT void AnObjectImpl_initWithIOSClass_withAnObject_(AnObjectImpl *self, IOSClass *anObjClass, id<AnObject> parentAnObject);

FOUNDATION_EXPORT AnObjectImpl *new_AnObjectImpl_initWithIOSClass_withAnObject_(IOSClass *anObjClass, id<AnObject> parentAnObject) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnObjectImpl *create_AnObjectImpl_initWithIOSClass_withAnObject_(IOSClass *anObjClass, id<AnObject> parentAnObject);

FOUNDATION_EXPORT void AnObjectImpl_initWithIOSClass_withNSStringArray_withAnObject_(AnObjectImpl *self, IOSClass *anObjClass, IOSObjectArray *propertyNames, id<AnObject> parentAnObject);

FOUNDATION_EXPORT AnObjectImpl *new_AnObjectImpl_initWithIOSClass_withNSStringArray_withAnObject_(IOSClass *anObjClass, IOSObjectArray *propertyNames, id<AnObject> parentAnObject) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnObjectImpl *create_AnObjectImpl_initWithIOSClass_withNSStringArray_withAnObject_(IOSClass *anObjClass, IOSObjectArray *propertyNames, id<AnObject> parentAnObject);

FOUNDATION_EXPORT void AnObjectImpl_initWithIOSClass_withAnAttribArray_withAnObject_(AnObjectImpl *self, IOSClass *anObjClass, IOSObjectArray *propertyMappers, id<AnObject> parentAnObject);

FOUNDATION_EXPORT AnObjectImpl *new_AnObjectImpl_initWithIOSClass_withAnAttribArray_withAnObject_(IOSClass *anObjClass, IOSObjectArray *propertyMappers, id<AnObject> parentAnObject) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnObjectImpl *create_AnObjectImpl_initWithIOSClass_withAnAttribArray_withAnObject_(IOSClass *anObjClass, IOSObjectArray *propertyMappers, id<AnObject> parentAnObject);

FOUNDATION_EXPORT void AnObjectImpl_initWithIOSClass_withNSStringArray_(AnObjectImpl *self, IOSClass *anObjClass, IOSObjectArray *propertyNames);

FOUNDATION_EXPORT AnObjectImpl *new_AnObjectImpl_initWithIOSClass_withNSStringArray_(IOSClass *anObjClass, IOSObjectArray *propertyNames) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnObjectImpl *create_AnObjectImpl_initWithIOSClass_withNSStringArray_(IOSClass *anObjClass, IOSObjectArray *propertyNames);

FOUNDATION_EXPORT void AnObjectImpl_initWithIOSClass_withAnAttribArray_(AnObjectImpl *self, IOSClass *anObjClass, IOSObjectArray *propertyMappers);

FOUNDATION_EXPORT AnObjectImpl *new_AnObjectImpl_initWithIOSClass_withAnAttribArray_(IOSClass *anObjClass, IOSObjectArray *propertyMappers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnObjectImpl *create_AnObjectImpl_initWithIOSClass_withAnAttribArray_(IOSClass *anObjClass, IOSObjectArray *propertyMappers);

J2OBJC_TYPE_LITERAL_HEADER(AnObjectImpl)

@compatibility_alias ComValsA2iosAmfibianImplAnObjectImpl AnObjectImpl;

#endif

#if !defined (AnObjectImpl_SampleGetAdapter_) && (INCLUDE_ALL_ComValsA2iosAmfibianImplAnObjectImpl || defined(INCLUDE_AnObjectImpl_SampleGetAdapter))
#define AnObjectImpl_SampleGetAdapter_

#define RESTRICT_ComValsA2iosAmfibianIntfAnAdapter 1
#define INCLUDE_AnAdapter 1
#include "com/vals/a2ios/amfibian/intf/AnAdapter.h"

@class IOSClass;
@protocol AnAttrib;

@interface AnObjectImpl_SampleGetAdapter : NSObject < AnAdapter >

#pragma mark Public

- (instancetype)init;

- (id)convertWithAnAttrib:(id<AnAttrib>)attrib
                   withId:(id)value;

- (void)onWarningWithIOSClass:(IOSClass *)cluss
                 withNSString:(NSString *)attribName
                       withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(AnObjectImpl_SampleGetAdapter)

FOUNDATION_EXPORT void AnObjectImpl_SampleGetAdapter_init(AnObjectImpl_SampleGetAdapter *self);

FOUNDATION_EXPORT AnObjectImpl_SampleGetAdapter *new_AnObjectImpl_SampleGetAdapter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnObjectImpl_SampleGetAdapter *create_AnObjectImpl_SampleGetAdapter_init();

J2OBJC_TYPE_LITERAL_HEADER(AnObjectImpl_SampleGetAdapter)

#endif

#if !defined (AnObjectImpl_SampleSetAdapter_) && (INCLUDE_ALL_ComValsA2iosAmfibianImplAnObjectImpl || defined(INCLUDE_AnObjectImpl_SampleSetAdapter))
#define AnObjectImpl_SampleSetAdapter_

#define RESTRICT_ComValsA2iosAmfibianIntfAnAdapter 1
#define INCLUDE_AnAdapter 1
#include "com/vals/a2ios/amfibian/intf/AnAdapter.h"

@class IOSClass;
@protocol AnAttrib;

@interface AnObjectImpl_SampleSetAdapter : NSObject < AnAdapter >

#pragma mark Public

- (instancetype)init;

- (id)convertWithAnAttrib:(id<AnAttrib>)attrib
                   withId:(id)value;

- (void)onWarningWithIOSClass:(IOSClass *)cluss
                 withNSString:(NSString *)attribName
                       withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(AnObjectImpl_SampleSetAdapter)

FOUNDATION_EXPORT void AnObjectImpl_SampleSetAdapter_init(AnObjectImpl_SampleSetAdapter *self);

FOUNDATION_EXPORT AnObjectImpl_SampleSetAdapter *new_AnObjectImpl_SampleSetAdapter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnObjectImpl_SampleSetAdapter *create_AnObjectImpl_SampleSetAdapter_init();

J2OBJC_TYPE_LITERAL_HEADER(AnObjectImpl_SampleSetAdapter)

#endif

#pragma pop_macro("INCLUDE_ALL_ComValsA2iosAmfibianImplAnObjectImpl")
