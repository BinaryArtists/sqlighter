//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../../android//com/vals/a2ios/amfibian/impl/AnUpgradeImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComValsA2iosAmfibianImplAnUpgradeImpl")
#ifdef RESTRICT_ComValsA2iosAmfibianImplAnUpgradeImpl
#define INCLUDE_ALL_ComValsA2iosAmfibianImplAnUpgradeImpl 0
#else
#define INCLUDE_ALL_ComValsA2iosAmfibianImplAnUpgradeImpl 1
#endif
#undef RESTRICT_ComValsA2iosAmfibianImplAnUpgradeImpl

#if !defined (AnUpgradeImpl_) && (INCLUDE_ALL_ComValsA2iosAmfibianImplAnUpgradeImpl || defined(INCLUDE_AnUpgradeImpl))
#define AnUpgradeImpl_

#define RESTRICT_ComValsA2iosAmfibianIntfAnUpgrade 1
#define INCLUDE_AnUpgrade 1
#include "com/vals/a2ios/amfibian/intf/AnUpgrade.h"

@class AnOrmImpl;
@class JavaLangThrowable;
@protocol JavaUtilList;
@protocol JavaUtilSet;
@protocol SQLighterDb;

@interface AnUpgradeImpl : NSObject < AnUpgrade > {
 @public
  id<SQLighterDb> sqlighterDb_;
  AnOrmImpl *anOrm_;
}

#pragma mark Public

- (instancetype)initWithSQLighterDb:(id<SQLighterDb>)sqLighterDb;

- (instancetype)initWithSQLighterDb:(id<SQLighterDb>)sqLighterDb
                       withNSString:(NSString *)tableName
                       withNSString:(NSString *)recoveryKey;

- (jint)applyUpdates;

- (jint)attemptToRecover;

- (id<JavaUtilSet>)getAppliedUpdates;

- (NSString *)getLogTableName;

- (id<JavaUtilList>)getTasksByKeyWithNSString:(NSString *)key;

- (id<JavaUtilList>)getUpdateKeys;

- (void)onTaskFailWithId:(id)task
   withJavaLangThrowable:(JavaLangThrowable *)exception;

- (void)onTaskSuccessWithId:(id)task;

- (void)setLogTableNameWithNSString:(NSString *)logTableName;

- (void)setRecoverKeyWithNSString:(NSString *)recoverKey;

#pragma mark Protected

- (jboolean)applyUpdateWithNSString:(NSString *)key
                   withJavaUtilList:(id<JavaUtilList>)statementList;

- (id<JavaUtilList>)getPrivateTasksByKeyWithNSString:(NSString *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(AnUpgradeImpl)

J2OBJC_FIELD_SETTER(AnUpgradeImpl, sqlighterDb_, id<SQLighterDb>)
J2OBJC_FIELD_SETTER(AnUpgradeImpl, anOrm_, AnOrmImpl *)

FOUNDATION_EXPORT void AnUpgradeImpl_initWithSQLighterDb_withNSString_withNSString_(AnUpgradeImpl *self, id<SQLighterDb> sqLighterDb, NSString *tableName, NSString *recoveryKey);

FOUNDATION_EXPORT void AnUpgradeImpl_initWithSQLighterDb_(AnUpgradeImpl *self, id<SQLighterDb> sqLighterDb);

J2OBJC_TYPE_LITERAL_HEADER(AnUpgradeImpl)

@compatibility_alias ComValsA2iosAmfibianImplAnUpgradeImpl AnUpgradeImpl;

#endif

#if !defined (AnUpgradeImpl_Upgrade_) && (INCLUDE_ALL_ComValsA2iosAmfibianImplAnUpgradeImpl || defined(INCLUDE_AnUpgradeImpl_Upgrade))
#define AnUpgradeImpl_Upgrade_

@class JavaLangDouble;
@class JavaLangInteger;
@class JavaUtilDate;

@interface AnUpgradeImpl_Upgrade : NSObject

#pragma mark Public

- (instancetype)init;

- (JavaUtilDate *)getCreateDate;

- (NSString *)getKey;

- (JavaLangDouble *)getRefd;

- (JavaLangInteger *)getRefi;

- (JavaLangInteger *)getRefs;

- (JavaLangInteger *)getStatus;

- (JavaLangInteger *)getType;

- (NSString *)getValue;

- (void)setCreateDateWithJavaUtilDate:(JavaUtilDate *)createDate;

- (void)setKeyWithNSString:(NSString *)key;

- (void)setRefdWithJavaLangDouble:(JavaLangDouble *)refd;

- (void)setRefiWithJavaLangInteger:(JavaLangInteger *)refi;

- (void)setRefsWithJavaLangInteger:(JavaLangInteger *)refs;

- (void)setStatusWithJavaLangInteger:(JavaLangInteger *)status;

- (void)setTypeWithJavaLangInteger:(JavaLangInteger *)type;

- (void)setValueWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(AnUpgradeImpl_Upgrade)

FOUNDATION_EXPORT void AnUpgradeImpl_Upgrade_init(AnUpgradeImpl_Upgrade *self);

FOUNDATION_EXPORT AnUpgradeImpl_Upgrade *new_AnUpgradeImpl_Upgrade_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnUpgradeImpl_Upgrade *create_AnUpgradeImpl_Upgrade_init();

J2OBJC_TYPE_LITERAL_HEADER(AnUpgradeImpl_Upgrade)

#endif

#pragma pop_macro("INCLUDE_ALL_ComValsA2iosAmfibianImplAnUpgradeImpl")
