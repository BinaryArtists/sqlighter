//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../../android//com/vals/a2ios/amfibian/impl/AnIncubatorImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComValsA2iosAmfibianImplAnIncubatorImpl")
#ifdef RESTRICT_ComValsA2iosAmfibianImplAnIncubatorImpl
#define INCLUDE_ALL_ComValsA2iosAmfibianImplAnIncubatorImpl 0
#else
#define INCLUDE_ALL_ComValsA2iosAmfibianImplAnIncubatorImpl 1
#endif
#undef RESTRICT_ComValsA2iosAmfibianImplAnIncubatorImpl

#if !defined (AnIncubatorImpl_) && (INCLUDE_ALL_ComValsA2iosAmfibianImplAnIncubatorImpl || defined(INCLUDE_AnIncubatorImpl))
#define AnIncubatorImpl_

#define RESTRICT_ComValsA2iosAmfibianIntfAnIncubator 1
#define INCLUDE_AnIncubator 1
#include "com/vals/a2ios/amfibian/intf/AnIncubator.h"

@class IOSClass;
@protocol AnAttrib;
@protocol AnOrm;
@protocol SQLighterDb;

@interface AnIncubatorImpl : NSObject < AnIncubator >

#pragma mark Public

- (instancetype)init;

- (NSString *)getAssociationSrcAttribNameWithIOSClass:(IOSClass *)cluss
                                         withAnAttrib:(id<AnAttrib>)attrib;

- (NSString *)getAssociationSrcJoinAttribNameWithIOSClass:(IOSClass *)cluss
                                             withAnAttrib:(id<AnAttrib>)attrib;

- (NSString *)getAssociationTrgClassNameWithIOSClass:(IOSClass *)cluss
                                        withAnAttrib:(id<AnAttrib>)attrib;

- (NSString *)getAssociationTrgJoinAttribNameWithIOSClass:(IOSClass *)cluss
                                             withAnAttrib:(id<AnAttrib>)attrib;

- (IOSClass *)getClassByNameWithNSString:(NSString *)name;

- (id<SQLighterDb>)getSqLighterDb;

- (jboolean)isLoaded;

- (void)load__WithNSString:(NSString *)jsonString;

- (id<AnOrm>)makeWithIOSClass:(IOSClass *)cluss;

- (id<AnOrm>)makeWithNSString:(NSString *)className_;

- (void)setSqLighterDbWithSQLighterDb:(id<SQLighterDb>)sqLighterDb;

- (void)unload;

@end

J2OBJC_EMPTY_STATIC_INIT(AnIncubatorImpl)

inline NSString *AnIncubatorImpl_get_ADAPTERS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AnIncubatorImpl_ADAPTERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AnIncubatorImpl, ADAPTERS, NSString *)

inline NSString *AnIncubatorImpl_get_ADAPTER_MAP();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AnIncubatorImpl_ADAPTER_MAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AnIncubatorImpl, ADAPTER_MAP, NSString *)

inline NSString *AnIncubatorImpl_get_CLASS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AnIncubatorImpl_CLASS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AnIncubatorImpl, CLASS, NSString *)

inline NSString *AnIncubatorImpl_get_ASSOCIATIONS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AnIncubatorImpl_ASSOCIATIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AnIncubatorImpl, ASSOCIATIONS, NSString *)

inline NSString *AnIncubatorImpl_get_ASSOCIATE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AnIncubatorImpl_ASSOCIATE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AnIncubatorImpl, ASSOCIATE, NSString *)

inline NSString *AnIncubatorImpl_get_OBJECT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AnIncubatorImpl_OBJECT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AnIncubatorImpl, OBJECT, NSString *)

inline NSString *AnIncubatorImpl_get_SRC();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AnIncubatorImpl_SRC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AnIncubatorImpl, SRC, NSString *)

inline NSString *AnIncubatorImpl_get_DST();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *AnIncubatorImpl_DST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AnIncubatorImpl, DST, NSString *)

FOUNDATION_EXPORT void AnIncubatorImpl_init(AnIncubatorImpl *self);

FOUNDATION_EXPORT AnIncubatorImpl *new_AnIncubatorImpl_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AnIncubatorImpl *create_AnIncubatorImpl_init();

J2OBJC_TYPE_LITERAL_HEADER(AnIncubatorImpl)

@compatibility_alias ComValsA2iosAmfibianImplAnIncubatorImpl AnIncubatorImpl;

#endif

#pragma pop_macro("INCLUDE_ALL_ComValsA2iosAmfibianImplAnIncubatorImpl")
