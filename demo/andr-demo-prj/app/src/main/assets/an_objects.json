{
  /* Comments are allowed in this
     format ONLY. */
  "name": "AmfibiaN",
  "version": "1.0",

  "objects":
          [
            {
              "className": "com.prod.vals.andr_demo_prj.Appointment",
              "tableName": "appointment",
              "extends":"com.prod.vals.andr_demo_prj.Entity",
              "attributes":
              [  /* "name" will be used as nativeObject attribute name, database column and json names */
                {"attribName": "name", "dbColumnDefinition": "TEXT NOT NULL"},
                /* explicitly setting distinct names for native object, db column and json */
                {"attribName": "isProcessed", "columnName": "is_processed", "jsonName":"processed"}, /*long notation for names*/
                {"attribName": "createUser"}
              ],
              "associations":
              [
                { "name": "createUser",
                  "srcAttribName":"createUserId",
                  "trgAttribName":"id",
                  "object":"com.prod.vals.andr_demo_prj.User"}
              ],
              "adapters": [ {"dbGet": "isProcessedGet"} ]
            },

            {
              "className":"com.prod.vals.andr_demo_prj.Entity",
              "attributes":
              [
                /* "null" in this situation means that this object does not persist "status" attribute in the database */
                {"attribName": "status, status, null",
                    "adapters": [ {"dbSet": "intSet"}, {"dbGet": "intGet"} ] },
                /* type should not be mapped to database table column */
                {"attribName": "type", "columnName": "null", "jsonName": "entity_type"},
                /* "id" will be used as nativeObject attribute, database and json names*/
                {"attribName": "id"},
                /* short notation for name specification - comma delimited
                  attribName, columnName, jsonName */
                {"attribName": "createDate,create_date,createDate"},
                {"attribName": "createUserId"}
              ]
            },

            {
              "className":"com.prod.vals.andr_demo_prj.User",
              "tableName": "appointment_user",
              "extends":"com.prod.vals.andr_demo_prj.Entity",
              "attributes" :
              [
                {"attribName":"name"},
                {"attribName":"appointments"}
              ],
              "associations":
              [
                { "name": "appointments",
                  "srcAttribName":"id",
                  "trgAttribName":"createUserId",
                  "object":"com.prod.vals.andr_demo_prj.Appointment"}
              ]
            }
          ],

  "adapterMap": /* adapters would have to be j2objc's with reflection flag on */
  [ /* to make it easier to refer adapters by short name further in JSON definitions */
    {"name": "sampleGet", "class": "com.prod.vals.andr_demo_prj.DemoDefaultGetAdapter"},
    {"name": "sampleSet", "class": "com.prod.vals.andr_demo_prj.DemoDefaultSetAdapter"},
    {"name": "intGet", "class": "com.prod.vals.andr_demo_prj.DemoIntGetAdapter"},
    {"name": "intSet", "class": "com.prod.vals.andr_demo_prj.DemoIntSetAdapter"},
    {"name": "isProcessedGet", "class": "com.prod.vals.andr_demo_prj.DemoAppointmentGetAdapter"}
  ],

  "adapters":
  [
    /*
       following adapters will be set at AnObject level to every object
       defined in this json unless the object has individual definition for
       the adapters.
    */
    {"jsonSet": "sampleSet"},
    {"jsonGet": "sampleGet"},
    /*
       following adapters will be set at AnSql level to every object
       defined in this json unless the object has individual definition for
       the converter.
    */
    {"dbSet": "sampleSet"},
    {"dbGet": "null"}
  ]

}