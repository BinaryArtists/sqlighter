//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../../demo/andr-demo-prj/app/src/main/java/com/prod/vals/andr_demo_prj/DemoAppointmentGetAdapter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/prod/vals/andr_demo_prj/DemoAppointmentGetAdapter.h"
#include "com/vals/a2ios/amfibian/intf/AnAttrib.h"
#include "java/lang/Integer.h"

@implementation DemoAppointmentGetAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DemoAppointmentGetAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)convertWithAnAttrib:(id<AnAttrib>)attrib
                   withId:(id)value {
  if ([((NSString *) nil_chk([((id<AnAttrib>) nil_chk(attrib)) getAttribName])) isEqual:@"isProcessed"]) {
    jint intValue = (value == nil) ? 0 : [((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(value, [JavaLangInteger class]))) intValue];
    if (intValue != 0) {
      intValue = 1;
    }
    return JavaLangInteger_valueOfWithInt_(intValue);
  }
  return value;
}

- (void)onWarningWithIOSClass:(IOSClass *)cluss
                 withNSString:(NSString *)attribName
                       withId:(id)value {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertWithAnAttrib:withId:);
  methods[2].selector = @selector(onWarningWithIOSClass:withNSString:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convert", "LAnAttrib;LNSObject;", "onWarning", "LIOSClass;LNSString;LNSObject;" };
  static const J2ObjcClassInfo _DemoAppointmentGetAdapter = { "DemoAppointmentGetAdapter", "com.prod.vals.andr_demo_prj", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_DemoAppointmentGetAdapter;
}

@end

void DemoAppointmentGetAdapter_init(DemoAppointmentGetAdapter *self) {
  NSObject_init(self);
}

DemoAppointmentGetAdapter *new_DemoAppointmentGetAdapter_init() {
  J2OBJC_NEW_IMPL(DemoAppointmentGetAdapter, init)
}

DemoAppointmentGetAdapter *create_DemoAppointmentGetAdapter_init() {
  J2OBJC_CREATE_IMPL(DemoAppointmentGetAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DemoAppointmentGetAdapter)
