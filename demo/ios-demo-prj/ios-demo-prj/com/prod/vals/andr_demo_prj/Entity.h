//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ../../../../demo/andr-demo-prj/app/src/main/java/com/prod/vals/andr_demo_prj/Entity.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComProdValsAndr_demo_prjEntity")
#ifdef RESTRICT_ComProdValsAndr_demo_prjEntity
#define INCLUDE_ALL_ComProdValsAndr_demo_prjEntity 0
#else
#define INCLUDE_ALL_ComProdValsAndr_demo_prjEntity 1
#endif
#undef RESTRICT_ComProdValsAndr_demo_prjEntity

#if !defined (Entity_) && (INCLUDE_ALL_ComProdValsAndr_demo_prjEntity || defined(INCLUDE_Entity))
#define Entity_

@class JavaLangInteger;
@class JavaUtilDate;
@class User;
@protocol JavaUtilCollection;

@interface Entity : NSObject {
 @public
  JavaLangInteger *id__;
  JavaUtilDate *createDate_;
  JavaLangInteger *status_;
  JavaLangInteger *type_;
  JavaLangInteger *createUserId_;
  User *createUser_;
  id<JavaUtilCollection> appointments_;
}

#pragma mark Public

- (instancetype)init;

- (id<JavaUtilCollection>)getAppointments;

- (JavaUtilDate *)getCreateDate;

- (User *)getCreateUser;

- (JavaLangInteger *)getCreateUserId;

- (JavaLangInteger *)getId;

- (JavaLangInteger *)getStatus;

- (JavaLangInteger *)getType;

- (void)setAppointmentsWithJavaUtilCollection:(id<JavaUtilCollection>)appointments;

- (void)setCreateDateWithJavaUtilDate:(JavaUtilDate *)createDate;

- (void)setCreateUserWithUser:(User *)createUser;

- (void)setCreateUserIdWithJavaLangInteger:(JavaLangInteger *)createUserId;

- (void)setIdWithJavaLangInteger:(JavaLangInteger *)id_;

- (void)setStatusWithJavaLangInteger:(JavaLangInteger *)status;

- (void)setTypeWithJavaLangInteger:(JavaLangInteger *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(Entity)

J2OBJC_FIELD_SETTER(Entity, id__, JavaLangInteger *)
J2OBJC_FIELD_SETTER(Entity, createDate_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(Entity, status_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(Entity, type_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(Entity, createUserId_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(Entity, createUser_, User *)
J2OBJC_FIELD_SETTER(Entity, appointments_, id<JavaUtilCollection>)

FOUNDATION_EXPORT void Entity_init(Entity *self);

FOUNDATION_EXPORT Entity *new_Entity_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT Entity *create_Entity_init();

J2OBJC_TYPE_LITERAL_HEADER(Entity)

@compatibility_alias ComProdValsAndr_demo_prjEntity Entity;

#endif

#pragma pop_macro("INCLUDE_ALL_ComProdValsAndr_demo_prjEntity")
